@{
    ViewData["Title"] = "Article Graph";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <title>Orb | Article Graph</title>
    <script src="@Html.Raw("https://unpkg.com/@memgraph/orb@0.4.3/dist/browser/orb.min.js")"></script>
    <style>
        #graph {
            border: 1px solid #e0e0e0;
            width: 600px;
            height: 600px;
        }
    </style>
</head>
<body>
    <div id="graph"></div>
    <script>
        async function fetchGraph() {
            const limit = 50; // Set your limit here or retrieve from user input
            const response = await fetch(`/graph?limit=${limit}`);
            const graphData = await response.json();

            const nodes = graphData.nodes.map(node => ({
                id: node.articleID,
                label: `Article ${node.articleID}`
            }));

            const edges = graphData.links.map(link => ({
                id: `${link.source}-${link.target}`,
                start: link.source,
                end: link.target,
                label: `Cites`
            }));

            const container = document.getElementById("graph");
            const orb = new Orb.Orb(container);
            orb.data.setup({ nodes, edges });
            orb.view.render(() => {
                orb.view.recenter();
            });
        }

        fetchGraph();
    </script>
</body>
</html>
